/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans   &kp Q       &kp W       &kp F       &kp P         &kp B       &kp J   &kp L        &kp U      &kp Y       &kp SQT     &trans
   &trans   &mt LSHFT A &mt LCTRL R &mt LALT S  &mt LGUI T    &kp G       &kp K   &mt LGUI N   &mt LALT E &mt LCTRL I &mt LSHFT O &trans
   &trans   &kp Z       &kp X       &kp C       &kp D         &kp V       &kp M   &kp H        &kp COMMA  &kp DOT     &kp FSLH    &trans
                                    &kp ESC     &mo 1         &mo 2       &kp RET &kp SPACE    &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans    &kp LG(N1) &kp LG(N2)    &kp LG(N3)    &kp LG(N4)     &kp LG(N5)        &trans     &kp HOME   &kp PG_DN    &kp PG_UP    &kp END    &trans
   &trans    &kp LSHFT  &kp LCTRL     &kp LALT      &kp LGUI       &trans            &trans     &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT  &trans
   &trans    &kp K_UNDO &kp C_AC_CUT  &kp C_AC_COPY &kp C_AC_PASTE &kp C_AC_REDO     &kp C_PP   &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &trans
                                   &none      &none      &mo 3          &kp RET    &kp BSPC   &kp DEL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans  &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &trans
   &trans  &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &trans
                           &kp LGUI &mo 3    &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};

